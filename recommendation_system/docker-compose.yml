services:
  web:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      opensearch-node1:
        condition: service_healthy
      opensearch-node2:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      .env
    volumes:
      - .:/app
    networks:
      - net

  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - "9200:9200" # REST API
      - "9600:9600" # Performance Analyzer
    networks:
      - net # All of the containers will join the same Docker bridge network
    healthcheck:
      test: [ "CMD-SHELL", "curl -k -u admin:$OPENSEARCH_INITIAL_ADMIN_PASSWORD --silent --fail https://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      retries: 10

  opensearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - net
    healthcheck:
      test: [ "CMD-SHELL", "curl -k -u admin:$OPENSEARCH_INITIAL_ADMIN_PASSWORD --silent --fail https://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      retries: 10

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_INITIAL_ADMIN_PASSWORD}
      - POSTGRES_USER=testuser
      - POSTGRES_DB=recomsystem
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U testuser -d recomsystem" ]
      interval: 10s
      retries: 5
    networks:
      - net

volumes:
  opensearch-data1:
  opensearch-data2:
  postgres:

networks:
  net:
    name: net
